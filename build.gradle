buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '1.7.2'
}

apply plugin: 'net.minecraftforge.gradle.forge'


final commitId

if (hasProperty("grgit")) { // If there's a valid Git repository, get the latest commit ID
    commitId = "${grgit.head().abbreviatedId}"
} else { // Else fall back to NOGIT
    commitId = "NOGIT"
}


version = "${mc_version}-${mod_version}-${commitId}"
def mod_version_string = version
group = "${package_group}"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace "@VERSION@", "$mod_version_string"
    replaceIn "Main.java"
}

repositories {
    
}

dependencies {
    
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mod_version", project.mod_version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'mod_version':project.mod_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes 'FMLAT': 'fabricate_at.cfg'
    }
}
